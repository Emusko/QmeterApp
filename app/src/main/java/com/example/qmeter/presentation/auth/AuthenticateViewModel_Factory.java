// Generated by Dagger (https://dagger.dev).
package com.example.qmeter.presentation.auth;

import com.example.qmeter.usecase.GetCustomersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthenticateViewModel_Factory implements Factory<AuthenticateViewModel> {
  private final Provider<GetCustomersUseCase> getCustomersUseCaseProvider;

  public AuthenticateViewModel_Factory(Provider<GetCustomersUseCase> getCustomersUseCaseProvider) {
    this.getCustomersUseCaseProvider = getCustomersUseCaseProvider;
  }

  @Override
  public AuthenticateViewModel get() {
    return newInstance(getCustomersUseCaseProvider.get());
  }

  public static AuthenticateViewModel_Factory create(
      Provider<GetCustomersUseCase> getCustomersUseCaseProvider) {
    return new AuthenticateViewModel_Factory(getCustomersUseCaseProvider);
  }

  public static AuthenticateViewModel newInstance(GetCustomersUseCase getCustomersUseCase) {
    return new AuthenticateViewModel(getCustomersUseCase);
  }
}
